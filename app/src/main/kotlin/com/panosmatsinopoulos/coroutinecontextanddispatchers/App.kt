/*
 * This Kotlin source file was generated by the Gradle 'init' task.
 */
package com.panosmatsinopoulos.coroutinecontextanddispatchers

import kotlinx.coroutines.*

class Activity {
    private val mainScope = CoroutineScope(Dispatchers.Default)

    fun destroy() {
        mainScope.cancel()
    }

    fun doSomething() {
        repeat(10) {
            mainScope.launch {
                println("Running $it (${Thread.currentThread().name})...")
                delay((it + 1) * 500L)
                println("...ending $it (${Thread.currentThread().name})")
            }
        }
    }
}

fun main() {
    println("Main ${Thread.currentThread().name}")
    val activity = Activity()
    runBlocking {
        activity.doSomething()
        println("Launched coroutines")
        delay(1_000L)
        println("Destroying activity before coroutines finish")
        activity.destroy()
    }
    println("Main ending")
}
